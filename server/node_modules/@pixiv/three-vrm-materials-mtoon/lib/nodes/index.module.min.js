/*! (c) 2019-2025 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */
import*as K from"three";var G=parseInt(K.REVISION,10);G<167&&console.warn(`MToonNodeMaterial requires Three.js r167 or higher (You are using r${G}). This would not work correctly.`);import*as gt from"three/webgpu";import{cos as yt,mat2 as Ht,sin as vt,uv as xt,vec2 as V,vec4 as Ct}from"three/tsl";import{materialReference as o}from"three/tsl";var q=o("color","color"),Z=o("map","texture"),$=o("normalMap","texture"),J=o("normalScale","vec2"),Q=o("emissive","color"),tt=o("emissiveIntensity","float"),et=o("emissiveMap","texture"),it=o("shadeColorFactor","color"),ot=o("shadingShiftFactor","float"),O=o("shadeMultiplyTexture","texture"),rt=o("shadeMultiplyTextureScale","float"),at=o("shadingToonyFactor","float"),nt=o("rimLightingMixFactor","float"),lt=o("rimMultiplyTexture","texture"),st=o("matcapFactor","color"),dt=o("matcapTexture","texture"),ut=o("parametricRimColorFactor","color"),ct=o("parametricRimLiftFactor","float"),mt=o("parametricRimFresnelPowerFactor","float"),ht=o("outlineWidthMultiplyTexture","texture"),pt=o("outlineWidthFactor","float"),L=o("outlineColorFactor","color"),ft=o("outlineLightingMixFactor","float"),Nt=o("uvAnimationMaskTexture","texture"),Tt=o("uvAnimationScrollXOffset","float"),Et=o("uvAnimationScrollYOffset","float"),Rt=o("uvAnimationRotationPhase","float");var T=class extends gt.TempNode{constructor(t){super("vec2"),this.hasMaskTexture=t}setup(){let t=1;this.hasMaskTexture&&(t=Ct(Nt).context({getUV:()=>xt()}).r);let e=xt(),i=Rt.mul(t),r=yt(i),l=vt(i);e=e.sub(V(.5,.5)),e=e.mul(Ht(r,l,l.negate(),r)),e=e.add(V(.5,.5));let d=V(Tt,Et).mul(t);return e=e.add(d),e.toVar("AnimatedUV")}};import*as St from"three/webgpu";import{BRDF_Lambert as P,diffuseColor as bt,float as Ot,mix as A,transformedNormalView as Lt,vec3 as w}from"three/tsl";import*as s from"three/webgpu";import{nodeImmutable as u}from"three/tsl";var y=u(s.PropertyNode,"vec3").toVar("ShadeColor"),H=u(s.PropertyNode,"float").toVar("ShadingShift"),v=u(s.PropertyNode,"float").toVar("ShadingToony"),E=u(s.PropertyNode,"float").toVar("RimLightingMix"),R=u(s.PropertyNode,"vec3").toVar("RimMultiply"),x=u(s.PropertyNode,"vec3").toVar("matcap"),g=u(s.PropertyNode,"vec3").toVar("ParametricRim");import*as Mt from"three/tsl";import*as C from"three/webgpu";var h=n=>parseInt(C.REVISION,10)>=168?Mt.Fn(n):C.tslFn(n);var Vt=h(({a:n,b:t,t:e})=>{let i=e.sub(n),r=t.sub(n);return i.div(r).clamp()}),wt=h(({dotNL:n})=>{let e=Ot(1).sub(v),i=n.add(H);return i=Vt({a:e.negate(),b:e,t:i}),i=i.mul(1),i}),Pt=h(({shading:n,lightColor:t})=>{let e=A(y,bt,n);return t.mul(P({diffuseColor:e}))}),M=class extends St.LightingModel{constructor(){super()}direct({lightDirection:t,lightColor:e,reflectedLight:i}){let r=Lt.dot(t).clamp(-1,1),l=wt({dotNL:r});i.directDiffuse.addAssign(Pt({shading:l,lightColor:e})),i.directSpecular.addAssign(g.add(x).mul(R).mul(A(w(0),P({diffuseColor:e}),E)))}indirect(t){let e="context"in t?t.context:t;this.indirectDiffuse(e),this.indirectSpecular(e)}indirectDiffuse(t){let{irradiance:e,reflectedLight:i}=t;i.indirectDiffuse.addAssign(e.mul(P({diffuseColor:bt})))}indirectSpecular(t){let{reflectedLight:e}=t;e.indirectSpecular.addAssign(g.add(x).mul(R).mul(A(w(1),w(0),E)))}};import*as a from"three/webgpu";import{cameraProjectionMatrix as Ut,diffuseColor as _t,float as S,length as zt,matcapUV as It,materialNormal as kt,mix as Bt,modelNormalMatrix as Yt,modelViewMatrix as Dt,normalLocal as Xt,normalMap as Gt,positionLocal as W,vec3 as f,vec4 as Kt}from"three/tsl";var p={None:"none",WorldCoordinates:"worldCoordinates",ScreenCoordinates:"screenCoordinates"};import{float as At,modelViewPosition as Wt,transformedNormalView as jt}from"three/tsl";var Ft=h(({parametricRimLift:n,parametricRimFresnelPower:t,parametricRimColor:e})=>{let i=Wt.normalize(),r=jt.dot(i.negate());return At(1).sub(r).add(n).clamp().pow(t).mul(e)});var j=class extends a.NodeMaterial{customProgramCacheKey(){let t=super.customProgramCacheKey();return t+=`isOutline:${this.isOutline},`,t}get isMToonNodeMaterial(){return!0}constructor(t={}){super(),t.transparentWithZWrite&&(t.depthWrite=!0),delete t.transparentWithZWrite,delete t.giEqualizationFactor,delete t.v0CompatShade,delete t.debugMode,this.emissiveNode=null,this.lights=!0,this.color=new a.Color(1,1,1),this.map=null,this.emissive=new a.Color(0,0,0),this.emissiveIntensity=1,this.emissiveMap=null,this.normalMap=null,this.normalScale=new a.Vector2(1,1),this.shadeColorFactor=new a.Color(0,0,0),this.shadeMultiplyTexture=null,this.shadingShiftFactor=0,this.shadingShiftTexture=null,this.shadingShiftTextureScale=1,this.shadingToonyFactor=.9,this.rimLightingMixFactor=1,this.rimMultiplyTexture=null,this.matcapFactor=new a.Color(1,1,1),this.matcapTexture=null,this.parametricRimColorFactor=new a.Color(0,0,0),this.parametricRimLiftFactor=0,this.parametricRimFresnelPowerFactor=5,this.outlineWidthMode=p.None,this.outlineWidthMultiplyTexture=null,this.outlineWidthFactor=0,this.outlineColorFactor=new a.Color(0,0,0),this.outlineLightingMixFactor=1,this.uvAnimationScrollXSpeedFactor=0,this.uvAnimationScrollYSpeedFactor=0,this.uvAnimationRotationSpeedFactor=0,this.uvAnimationMaskTexture=null,this.shadeColorNode=null,this.shadingShiftNode=null,this.shadingToonyNode=null,this.rimLightingMixNode=null,this.rimMultiplyNode=null,this.matcapNode=null,this.parametricRimColorNode=null,this.parametricRimLiftNode=null,this.parametricRimFresnelPowerNode=null,this.uvAnimationScrollXOffset=0,this.uvAnimationScrollYOffset=0,this.uvAnimationRotationPhase=0,this.isOutline=!1,this._animatedUVNode=null,this.setValues(t)}setupLightingModel(){return new M}setup(t){var e;this._animatedUVNode=new T((e=this.uvAnimationMaskTexture&&this.uvAnimationMaskTexture.isTexture===!0)!=null?e:!1),super.setup(t)}setupDiffuseColor(t){let e=null;if(this.colorNode==null){if(e=q,this.map&&this.map.isTexture===!0){let i=Z.context({getUV:()=>this._animatedUVNode});e=e.mul(i)}this.colorNode=e}this.vertexColors===!0&&t.geometry.hasAttribute("color")&&(console.warn("MToonNodeMaterial: MToon ignores vertex colors. Consider using a model without vertex colors instead."),this.vertexColors=!1),super.setupDiffuseColor(t),parseInt(a.REVISION,10)<166&&this.transparent===!1&&this.blending===a.NormalBlending&&this.alphaToCoverage===!1&&_t.a.assign(1),this.colorNode===e&&(this.colorNode=null)}setupVariants(){y.assign(this._setupShadeColorNode()),H.assign(this._setupShadingShiftNode()),v.assign(this._setupShadingToonyNode()),E.assign(this._setupRimLightingMixNode()),R.assign(this._setupRimMultiplyNode()),x.assign(this._setupMatcapNode()),g.assign(this._setupParametricRimNode())}setupNormal(t){let e=this.normalNode;if(this.normalNode==null){if(this.normalNode=kt,this.normalMap&&this.normalMap.isTexture===!0){let r=$.context({getUV:()=>this._animatedUVNode});this.normalNode=Gt(r,J)}this.isOutline&&(this.normalNode=this.normalNode.negate())}if(parseInt(a.REVISION,10)>=168){let r=this.normalNode;return this.normalNode=e,r}else{super.setupNormal(t),this.normalNode=e;return}}setupLighting(t){let e=null;if(this.emissiveNode==null){if(e=Q.mul(tt),this.emissiveMap&&this.emissiveMap.isTexture===!0){let r=et.context({getUV:()=>this._animatedUVNode});e=e.mul(r)}this.emissiveNode=e}let i=super.setupLighting(t);return this.emissiveNode===e&&(this.emissiveNode=null),i}setupOutput(t,e){return this.isOutline&&this.outlineWidthMode!==p.None&&(e=Kt(Bt(L,e.xyz.mul(L),ft),e.w)),super.setupOutput(t,e)}setupPosition(t){var r,l;let e=this.positionNode;if(this.isOutline&&this.outlineWidthMode!==p.None){(r=this.positionNode)!=null||(this.positionNode=W);let d=Xt.normalize(),c=pt;if(this.outlineWidthMultiplyTexture&&this.outlineWidthMultiplyTexture.isTexture===!0){let m=ht.context({getUV:()=>this._animatedUVNode});c=c.mul(m)}let b=zt(Yt.mul(d)),N=c.mul(b).mul(d);if(this.outlineWidthMode===p.WorldCoordinates)this.positionNode=this.positionNode.add(N);else if(this.outlineWidthMode===p.ScreenCoordinates){let m=Ut.element(1).element(1),F=Dt.mul(W);this.positionNode=this.positionNode.add(N.div(m).mul(F.z.negate()))}(l=this.positionNode)!=null||(this.positionNode=W)}let i=super.setupPosition(t);return i.z.add(i.w.mul(1e-6)),this.positionNode=e,i}copy(t){var e,i,r,l,d,c,b,N,m,F,U,_,z,I,k,B,Y,D,X;return this.color.copy(t.color),this.map=(e=t.map)!=null?e:null,this.emissive.copy(t.emissive),this.emissiveIntensity=t.emissiveIntensity,this.emissiveMap=(i=t.emissiveMap)!=null?i:null,this.normalMap=(r=t.normalMap)!=null?r:null,this.normalScale.copy(t.normalScale),this.shadeColorFactor.copy(t.shadeColorFactor),this.shadeMultiplyTexture=(l=t.shadeMultiplyTexture)!=null?l:null,this.shadingShiftFactor=t.shadingShiftFactor,this.shadingShiftTexture=(d=t.shadingShiftTexture)!=null?d:null,this.shadingShiftTextureScale=t.shadingShiftTextureScale,this.shadingToonyFactor=t.shadingToonyFactor,this.rimLightingMixFactor=t.rimLightingMixFactor,this.rimMultiplyTexture=(c=t.rimMultiplyTexture)!=null?c:null,this.matcapFactor.copy(t.matcapFactor),this.matcapTexture=(b=t.matcapTexture)!=null?b:null,this.parametricRimColorFactor.copy(t.parametricRimColorFactor),this.parametricRimLiftFactor=t.parametricRimLiftFactor,this.parametricRimFresnelPowerFactor=t.parametricRimFresnelPowerFactor,this.outlineWidthMode=t.outlineWidthMode,this.outlineWidthMultiplyTexture=(N=t.outlineWidthMultiplyTexture)!=null?N:null,this.outlineWidthFactor=t.outlineWidthFactor,this.outlineColorFactor.copy(t.outlineColorFactor),this.outlineLightingMixFactor=t.outlineLightingMixFactor,this.uvAnimationScrollXSpeedFactor=t.uvAnimationScrollXSpeedFactor,this.uvAnimationScrollYSpeedFactor=t.uvAnimationScrollYSpeedFactor,this.uvAnimationRotationSpeedFactor=t.uvAnimationRotationSpeedFactor,this.uvAnimationMaskTexture=(m=t.uvAnimationMaskTexture)!=null?m:null,this.shadeColorNode=(F=t.shadeColorNode)!=null?F:null,this.shadingShiftNode=(U=t.shadingShiftNode)!=null?U:null,this.shadingToonyNode=(_=t.shadingToonyNode)!=null?_:null,this.rimLightingMixNode=(z=t.rimLightingMixNode)!=null?z:null,this.rimMultiplyNode=(I=t.rimMultiplyNode)!=null?I:null,this.matcapNode=(k=t.matcapNode)!=null?k:null,this.parametricRimColorNode=(B=t.parametricRimColorNode)!=null?B:null,this.parametricRimLiftNode=(Y=t.parametricRimLiftNode)!=null?Y:null,this.parametricRimFresnelPowerNode=(D=t.parametricRimFresnelPowerNode)!=null?D:null,this.isOutline=(X=t.isOutline)!=null?X:null,super.copy(t)}update(t){this.uvAnimationScrollXOffset+=t*this.uvAnimationScrollXSpeedFactor,this.uvAnimationScrollYOffset+=t*this.uvAnimationScrollYSpeedFactor,this.uvAnimationRotationPhase+=t*this.uvAnimationRotationSpeedFactor}_setupShadeColorNode(){if(this.shadeColorNode!=null)return f(this.shadeColorNode);let t=it;if(this.shadeMultiplyTexture&&this.shadeMultiplyTexture.isTexture===!0){let e=O.context({getUV:()=>this._animatedUVNode});t=t.mul(e)}return t}_setupShadingShiftNode(){if(this.shadingShiftNode!=null)return S(this.shadingShiftNode);let t=ot;if(this.shadingShiftTexture&&this.shadingShiftTexture.isTexture===!0){let e=O.context({getUV:()=>this._animatedUVNode});t=t.add(e.mul(rt))}return t}_setupShadingToonyNode(){return this.shadingToonyNode!=null?S(this.shadingToonyNode):at}_setupRimLightingMixNode(){return this.rimLightingMixNode!=null?S(this.rimLightingMixNode):nt}_setupRimMultiplyNode(){return this.rimMultiplyNode!=null?f(this.rimMultiplyNode):this.rimMultiplyTexture&&this.rimMultiplyTexture.isTexture===!0?lt.context({getUV:()=>this._animatedUVNode}):f(1)}_setupMatcapNode(){return this.matcapNode!=null?f(this.matcapNode):this.matcapTexture&&this.matcapTexture.isTexture===!0?dt.context({getUV:()=>It.mul(1,-1).add(0,1)}).mul(st):f(0)}_setupParametricRimNode(){let t=this.parametricRimColorNode!=null?f(this.parametricRimColorNode):ut,e=this.parametricRimLiftNode!=null?S(this.parametricRimLiftNode):ct,i=this.parametricRimFresnelPowerNode!=null?S(this.parametricRimFresnelPowerNode):mt;return Ft({parametricRimLift:e,parametricRimFresnelPower:i,parametricRimColor:t})}};export{T as MToonAnimatedUVNode,M as MToonLightingModel,j as MToonNodeMaterial};
