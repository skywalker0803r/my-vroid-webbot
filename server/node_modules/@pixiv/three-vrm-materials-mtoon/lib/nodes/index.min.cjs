/*! (c) 2019-2025 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */
"use strict";var bt=Object.create;var C=Object.defineProperty;var Ft=Object.getOwnPropertyDescriptor;var yt=Object.getOwnPropertyNames;var Ht=Object.getPrototypeOf,vt=Object.prototype.hasOwnProperty;var Ct=(r,t)=>{for(var e in t)C(r,e,{get:t[e],enumerable:!0})},X=(r,t,e,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of yt(t))!vt.call(r,n)&&n!==e&&C(r,n,{get:()=>t[n],enumerable:!(o=Ft(t,n))||o.enumerable});return r};var p=(r,t,e)=>(e=r!=null?bt(Ht(r)):{},X(t||!r||!r.__esModule?C(e,"default",{value:r,enumerable:!0}):e,r)),Ot=r=>X(C({},"__esModule",{value:!0}),r);var Pt={};Ct(Pt,{MToonAnimatedUVNode:()=>T,MToonLightingModel:()=>R,MToonNodeMaterial:()=>P});module.exports=Ot(Pt);var K=p(require("three"),1),G=parseInt(K.REVISION,10);G<167&&console.warn(`MToonNodeMaterial requires Three.js r167 or higher (You are using r${G}). This would not work correctly.`);var xt=p(require("three/webgpu"),1),d=require("three/tsl");var a=require("three/tsl"),q=(0,a.materialReference)("color","color"),Z=(0,a.materialReference)("map","texture"),$=(0,a.materialReference)("normalMap","texture"),J=(0,a.materialReference)("normalScale","vec2"),Q=(0,a.materialReference)("emissive","color"),tt=(0,a.materialReference)("emissiveIntensity","float"),et=(0,a.materialReference)("emissiveMap","texture"),it=(0,a.materialReference)("shadeColorFactor","color"),ot=(0,a.materialReference)("shadingShiftFactor","float"),A=(0,a.materialReference)("shadeMultiplyTexture","texture"),rt=(0,a.materialReference)("shadeMultiplyTextureScale","float"),at=(0,a.materialReference)("shadingToonyFactor","float"),nt=(0,a.materialReference)("rimLightingMixFactor","float"),lt=(0,a.materialReference)("rimMultiplyTexture","texture"),st=(0,a.materialReference)("matcapFactor","color"),dt=(0,a.materialReference)("matcapTexture","texture"),ut=(0,a.materialReference)("parametricRimColorFactor","color"),ct=(0,a.materialReference)("parametricRimLiftFactor","float"),mt=(0,a.materialReference)("parametricRimFresnelPowerFactor","float"),ht=(0,a.materialReference)("outlineWidthMultiplyTexture","texture"),pt=(0,a.materialReference)("outlineWidthFactor","float"),W=(0,a.materialReference)("outlineColorFactor","color"),ft=(0,a.materialReference)("outlineLightingMixFactor","float"),Nt=(0,a.materialReference)("uvAnimationMaskTexture","texture"),Tt=(0,a.materialReference)("uvAnimationScrollXOffset","float"),Et=(0,a.materialReference)("uvAnimationScrollYOffset","float"),Rt=(0,a.materialReference)("uvAnimationRotationPhase","float");var T=class extends xt.TempNode{constructor(t){super("vec2"),this.hasMaskTexture=t}setup(){let t=1;this.hasMaskTexture&&(t=(0,d.vec4)(Nt).context({getUV:()=>(0,d.uv)()}).r);let e=(0,d.uv)(),o=Rt.mul(t),n=(0,d.cos)(o),u=(0,d.sin)(o);e=e.sub((0,d.vec2)(.5,.5)),e=e.mul((0,d.mat2)(n,u,u.negate(),n)),e=e.add((0,d.vec2)(.5,.5));let h=(0,d.vec2)(Tt,Et).mul(t);return e=e.add(h),e.toVar("AnimatedUV")}};var Mt=p(require("three/webgpu"),1),l=require("three/tsl");var c=p(require("three/webgpu"),1),m=require("three/tsl"),O=(0,m.nodeImmutable)(c.PropertyNode,"vec3").toVar("ShadeColor"),L=(0,m.nodeImmutable)(c.PropertyNode,"float").toVar("ShadingShift"),V=(0,m.nodeImmutable)(c.PropertyNode,"float").toVar("ShadingToony"),S=(0,m.nodeImmutable)(c.PropertyNode,"float").toVar("RimLightingMix"),b=(0,m.nodeImmutable)(c.PropertyNode,"vec3").toVar("RimMultiply"),F=(0,m.nodeImmutable)(c.PropertyNode,"vec3").toVar("matcap"),y=(0,m.nodeImmutable)(c.PropertyNode,"vec3").toVar("ParametricRim");var gt=p(require("three/tsl"),1),w=p(require("three/webgpu"),1),E=r=>parseInt(w.REVISION,10)>=168?gt.Fn(r):w.tslFn(r);var Lt=E(({a:r,b:t,t:e})=>{let o=e.sub(r),n=t.sub(r);return o.div(n).clamp()}),Vt=E(({dotNL:r})=>{let e=(0,l.float)(1).sub(V),o=r.add(L);return o=Lt({a:e.negate(),b:e,t:o}),o=o.mul(1),o}),wt=E(({shading:r,lightColor:t})=>{let e=(0,l.mix)(O,l.diffuseColor,r);return t.mul((0,l.BRDF_Lambert)({diffuseColor:e}))}),R=class extends Mt.LightingModel{constructor(){super()}direct({lightDirection:t,lightColor:e,reflectedLight:o}){let n=l.transformedNormalView.dot(t).clamp(-1,1),u=Vt({dotNL:n});o.directDiffuse.addAssign(wt({shading:u,lightColor:e})),o.directSpecular.addAssign(y.add(F).mul(b).mul((0,l.mix)((0,l.vec3)(0),(0,l.BRDF_Lambert)({diffuseColor:e}),S)))}indirect(t){let e="context"in t?t.context:t;this.indirectDiffuse(e),this.indirectSpecular(e)}indirectDiffuse(t){let{irradiance:e,reflectedLight:o}=t;o.indirectDiffuse.addAssign(e.mul((0,l.BRDF_Lambert)({diffuseColor:l.diffuseColor})))}indirectSpecular(t){let{reflectedLight:e}=t;e.indirectSpecular.addAssign(y.add(F).mul(b).mul((0,l.mix)((0,l.vec3)(1),(0,l.vec3)(0),S)))}};var s=p(require("three/webgpu"),1),i=require("three/tsl");var x={None:"none",WorldCoordinates:"worldCoordinates",ScreenCoordinates:"screenCoordinates"};var g=require("three/tsl");var St=E(({parametricRimLift:r,parametricRimFresnelPower:t,parametricRimColor:e})=>{let o=g.modelViewPosition.normalize(),n=g.transformedNormalView.dot(o.negate());return(0,g.float)(1).sub(n).add(r).clamp().pow(t).mul(e)});var P=class extends s.NodeMaterial{customProgramCacheKey(){let t=super.customProgramCacheKey();return t+=`isOutline:${this.isOutline},`,t}get isMToonNodeMaterial(){return!0}constructor(t={}){super(),t.transparentWithZWrite&&(t.depthWrite=!0),delete t.transparentWithZWrite,delete t.giEqualizationFactor,delete t.v0CompatShade,delete t.debugMode,this.emissiveNode=null,this.lights=!0,this.color=new s.Color(1,1,1),this.map=null,this.emissive=new s.Color(0,0,0),this.emissiveIntensity=1,this.emissiveMap=null,this.normalMap=null,this.normalScale=new s.Vector2(1,1),this.shadeColorFactor=new s.Color(0,0,0),this.shadeMultiplyTexture=null,this.shadingShiftFactor=0,this.shadingShiftTexture=null,this.shadingShiftTextureScale=1,this.shadingToonyFactor=.9,this.rimLightingMixFactor=1,this.rimMultiplyTexture=null,this.matcapFactor=new s.Color(1,1,1),this.matcapTexture=null,this.parametricRimColorFactor=new s.Color(0,0,0),this.parametricRimLiftFactor=0,this.parametricRimFresnelPowerFactor=5,this.outlineWidthMode=x.None,this.outlineWidthMultiplyTexture=null,this.outlineWidthFactor=0,this.outlineColorFactor=new s.Color(0,0,0),this.outlineLightingMixFactor=1,this.uvAnimationScrollXSpeedFactor=0,this.uvAnimationScrollYSpeedFactor=0,this.uvAnimationRotationSpeedFactor=0,this.uvAnimationMaskTexture=null,this.shadeColorNode=null,this.shadingShiftNode=null,this.shadingToonyNode=null,this.rimLightingMixNode=null,this.rimMultiplyNode=null,this.matcapNode=null,this.parametricRimColorNode=null,this.parametricRimLiftNode=null,this.parametricRimFresnelPowerNode=null,this.uvAnimationScrollXOffset=0,this.uvAnimationScrollYOffset=0,this.uvAnimationRotationPhase=0,this.isOutline=!1,this._animatedUVNode=null,this.setValues(t)}setupLightingModel(){return new R}setup(t){var e;this._animatedUVNode=new T((e=this.uvAnimationMaskTexture&&this.uvAnimationMaskTexture.isTexture===!0)!=null?e:!1),super.setup(t)}setupDiffuseColor(t){let e=null;if(this.colorNode==null){if(e=q,this.map&&this.map.isTexture===!0){let o=Z.context({getUV:()=>this._animatedUVNode});e=e.mul(o)}this.colorNode=e}this.vertexColors===!0&&t.geometry.hasAttribute("color")&&(console.warn("MToonNodeMaterial: MToon ignores vertex colors. Consider using a model without vertex colors instead."),this.vertexColors=!1),super.setupDiffuseColor(t),parseInt(s.REVISION,10)<166&&this.transparent===!1&&this.blending===s.NormalBlending&&this.alphaToCoverage===!1&&i.diffuseColor.a.assign(1),this.colorNode===e&&(this.colorNode=null)}setupVariants(){O.assign(this._setupShadeColorNode()),L.assign(this._setupShadingShiftNode()),V.assign(this._setupShadingToonyNode()),S.assign(this._setupRimLightingMixNode()),b.assign(this._setupRimMultiplyNode()),F.assign(this._setupMatcapNode()),y.assign(this._setupParametricRimNode())}setupNormal(t){let e=this.normalNode;if(this.normalNode==null){if(this.normalNode=i.materialNormal,this.normalMap&&this.normalMap.isTexture===!0){let n=$.context({getUV:()=>this._animatedUVNode});this.normalNode=(0,i.normalMap)(n,J)}this.isOutline&&(this.normalNode=this.normalNode.negate())}if(parseInt(s.REVISION,10)>=168){let n=this.normalNode;return this.normalNode=e,n}else{super.setupNormal(t),this.normalNode=e;return}}setupLighting(t){let e=null;if(this.emissiveNode==null){if(e=Q.mul(tt),this.emissiveMap&&this.emissiveMap.isTexture===!0){let n=et.context({getUV:()=>this._animatedUVNode});e=e.mul(n)}this.emissiveNode=e}let o=super.setupLighting(t);return this.emissiveNode===e&&(this.emissiveNode=null),o}setupOutput(t,e){return this.isOutline&&this.outlineWidthMode!==x.None&&(e=(0,i.vec4)((0,i.mix)(W,e.xyz.mul(W),ft),e.w)),super.setupOutput(t,e)}setupPosition(t){var n,u;let e=this.positionNode;if(this.isOutline&&this.outlineWidthMode!==x.None){(n=this.positionNode)!=null||(this.positionNode=i.positionLocal);let h=i.normalLocal.normalize(),f=pt;if(this.outlineWidthMultiplyTexture&&this.outlineWidthMultiplyTexture.isTexture===!0){let N=ht.context({getUV:()=>this._animatedUVNode});f=f.mul(N)}let H=(0,i.length)(i.modelNormalMatrix.mul(h)),M=f.mul(H).mul(h);if(this.outlineWidthMode===x.WorldCoordinates)this.positionNode=this.positionNode.add(M);else if(this.outlineWidthMode===x.ScreenCoordinates){let N=i.cameraProjectionMatrix.element(1).element(1),v=i.modelViewMatrix.mul(i.positionLocal);this.positionNode=this.positionNode.add(M.div(N).mul(v.z.negate()))}(u=this.positionNode)!=null||(this.positionNode=i.positionLocal)}let o=super.setupPosition(t);return o.z.add(o.w.mul(1e-6)),this.positionNode=e,o}copy(t){var e,o,n,u,h,f,H,M,N,v,j,U,_,z,I,k,B,Y,D;return this.color.copy(t.color),this.map=(e=t.map)!=null?e:null,this.emissive.copy(t.emissive),this.emissiveIntensity=t.emissiveIntensity,this.emissiveMap=(o=t.emissiveMap)!=null?o:null,this.normalMap=(n=t.normalMap)!=null?n:null,this.normalScale.copy(t.normalScale),this.shadeColorFactor.copy(t.shadeColorFactor),this.shadeMultiplyTexture=(u=t.shadeMultiplyTexture)!=null?u:null,this.shadingShiftFactor=t.shadingShiftFactor,this.shadingShiftTexture=(h=t.shadingShiftTexture)!=null?h:null,this.shadingShiftTextureScale=t.shadingShiftTextureScale,this.shadingToonyFactor=t.shadingToonyFactor,this.rimLightingMixFactor=t.rimLightingMixFactor,this.rimMultiplyTexture=(f=t.rimMultiplyTexture)!=null?f:null,this.matcapFactor.copy(t.matcapFactor),this.matcapTexture=(H=t.matcapTexture)!=null?H:null,this.parametricRimColorFactor.copy(t.parametricRimColorFactor),this.parametricRimLiftFactor=t.parametricRimLiftFactor,this.parametricRimFresnelPowerFactor=t.parametricRimFresnelPowerFactor,this.outlineWidthMode=t.outlineWidthMode,this.outlineWidthMultiplyTexture=(M=t.outlineWidthMultiplyTexture)!=null?M:null,this.outlineWidthFactor=t.outlineWidthFactor,this.outlineColorFactor.copy(t.outlineColorFactor),this.outlineLightingMixFactor=t.outlineLightingMixFactor,this.uvAnimationScrollXSpeedFactor=t.uvAnimationScrollXSpeedFactor,this.uvAnimationScrollYSpeedFactor=t.uvAnimationScrollYSpeedFactor,this.uvAnimationRotationSpeedFactor=t.uvAnimationRotationSpeedFactor,this.uvAnimationMaskTexture=(N=t.uvAnimationMaskTexture)!=null?N:null,this.shadeColorNode=(v=t.shadeColorNode)!=null?v:null,this.shadingShiftNode=(j=t.shadingShiftNode)!=null?j:null,this.shadingToonyNode=(U=t.shadingToonyNode)!=null?U:null,this.rimLightingMixNode=(_=t.rimLightingMixNode)!=null?_:null,this.rimMultiplyNode=(z=t.rimMultiplyNode)!=null?z:null,this.matcapNode=(I=t.matcapNode)!=null?I:null,this.parametricRimColorNode=(k=t.parametricRimColorNode)!=null?k:null,this.parametricRimLiftNode=(B=t.parametricRimLiftNode)!=null?B:null,this.parametricRimFresnelPowerNode=(Y=t.parametricRimFresnelPowerNode)!=null?Y:null,this.isOutline=(D=t.isOutline)!=null?D:null,super.copy(t)}update(t){this.uvAnimationScrollXOffset+=t*this.uvAnimationScrollXSpeedFactor,this.uvAnimationScrollYOffset+=t*this.uvAnimationScrollYSpeedFactor,this.uvAnimationRotationPhase+=t*this.uvAnimationRotationSpeedFactor}_setupShadeColorNode(){if(this.shadeColorNode!=null)return(0,i.vec3)(this.shadeColorNode);let t=it;if(this.shadeMultiplyTexture&&this.shadeMultiplyTexture.isTexture===!0){let e=A.context({getUV:()=>this._animatedUVNode});t=t.mul(e)}return t}_setupShadingShiftNode(){if(this.shadingShiftNode!=null)return(0,i.float)(this.shadingShiftNode);let t=ot;if(this.shadingShiftTexture&&this.shadingShiftTexture.isTexture===!0){let e=A.context({getUV:()=>this._animatedUVNode});t=t.add(e.mul(rt))}return t}_setupShadingToonyNode(){return this.shadingToonyNode!=null?(0,i.float)(this.shadingToonyNode):at}_setupRimLightingMixNode(){return this.rimLightingMixNode!=null?(0,i.float)(this.rimLightingMixNode):nt}_setupRimMultiplyNode(){return this.rimMultiplyNode!=null?(0,i.vec3)(this.rimMultiplyNode):this.rimMultiplyTexture&&this.rimMultiplyTexture.isTexture===!0?lt.context({getUV:()=>this._animatedUVNode}):(0,i.vec3)(1)}_setupMatcapNode(){return this.matcapNode!=null?(0,i.vec3)(this.matcapNode):this.matcapTexture&&this.matcapTexture.isTexture===!0?dt.context({getUV:()=>i.matcapUV.mul(1,-1).add(0,1)}).mul(st):(0,i.vec3)(0)}_setupParametricRimNode(){let t=this.parametricRimColorNode!=null?(0,i.vec3)(this.parametricRimColorNode):ut,e=this.parametricRimLiftNode!=null?(0,i.float)(this.parametricRimLiftNode):ct,o=this.parametricRimFresnelPowerNode!=null?(0,i.float)(this.parametricRimFresnelPowerNode):mt;return St({parametricRimLift:e,parametricRimFresnelPower:o,parametricRimColor:t})}};
